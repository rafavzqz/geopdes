% GEOPDES_MAXWELL_EXAMPLES: Run some simple examples on how to use the geopdes_maxwell package.
%
% Copyright (C) 2006-2009, Thomas Treichl <treichl@users.sourceforge.net>
% Copyright (C) 2010 Rafael Vazquez
%
%    This program is free software: you can redistribute it and/or modify
%    it under the terms of the GNU General Public License as published by
%    the Free Software Foundation, either version 3 of the License, or
%    (at your option) any later version.

%    This program is distributed in the hope that it will be useful,
%    but WITHOUT ANY WARRANTY; without even the implied warranty of
%    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%    GNU General Public License for more details.
%
%    You should have received a copy of the GNU General Public License
%    along with this program.  If not, see <http://www.gnu.org/licenses/>.

function [] = geopdes_maxwell_examples ()

iopt = 1; 
while (iopt > 0)
  clc;
  fprintf (1, ...
           ['GeoPDEs_Maxwell examples menu:\n', ...
            '------------------------------\n', ...
            '\n', ...
            '   (1) Examples in 2D: source problem. \n \n',...
            '   (2) Examples in 2D: eigenvalue problem. \n \n',...
            '   (3) Examples in 3D: source problem. \n \n',...
            '   (4) Examples in 3D: eigenvalue problem. \n \n']);

  iopt = input ('Please choose a number from above or press <Enter> to return: ');
  clc;

  if (iopt == 2)
    iopt2 = 1; 
    while (iopt2 > 0)
      clc;
      fprintf (1, ...
               ['GeoPDEs_Maxwell examples menu: 2D eigenvalue problem\n', ...
                '----------------------------------------------------\n', ...
                '\n', ...
                '   (1) Direct formulation \n \n', ...
                '   (2) First mixed formulation \n \n', ...
                '   (3) Second mixed formulation \n \n']);
      
      iopt2 = input ('Please choose a number from above or press <Enter> to return: ');

      if (~isempty (iopt2))
        switch iopt2
         case 1
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 2D eigenvalue problem\n', ...
                    '----------------------------------------------------\n', ...
                    '\n', ...
                    '   2D Maxwell eigenvalue problem solved with the direct formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_square_eig \n',...
                    '   - test_maxwell_Lshaped_eig \n',...
                    '   - test_maxwell_curvedL_eig \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_square_eig] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_square_eig';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_maxwell_2d_eig.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_maxwell_2d_eig\n\n'], data_file)
          ex_bspline_maxwell_2d_eig
          input ('Press <Enter> to continue: ');
         case 2
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 2D eigenvalue problem\n', ...
                    '----------------------------------------------------\n', ...
                    '\n', ...
                    '   2D Maxwell eigenvalue problem solved with the first mixed formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_square_eig \n',...
                    '   - test_maxwell_Lshaped_eig \n',...
                    '   - test_maxwell_curvedL_eig \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_square_eig] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_square_eig';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_mixed_form1_2d_eig.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_mixed_form1_2d_eig\n\n'], data_file)
          ex_bspline_mixed_form1_2d_eig
          input ('Press <Enter> to continue: ');

         case 3
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 2D eigenvalue problem\n', ...
                    '----------------------------------------------------\n', ...
                    '\n', ...
                    '   2D Maxwell eigenvalue problem solved with the second mixed formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_square_eig \n',...
                    '   - test_maxwell_Lshaped_eig \n',...
                    '   - test_maxwell_curvedL_eig \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_square_eig] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_square_eig';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_mixed_form2_2d_eig.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_mixed_form2_2d_eig\n\n'], data_file)
          ex_bspline_mixed_form2_2d_eig
          input ('Press <Enter> to continue: ');
        end %# switch (iopt2)
      end %# if (~isempty (iopt2))
    end %# while (iopt2 > 0)

  elseif (iopt == 4)
    iopt2 = 1; 
    while (iopt2 > 0)
      clc;
      fprintf (1, ...
               ['GeoPDEs_Maxwell examples menu: 3D eigenvalue problem\n', ...
                '----------------------------------------------------\n', ...
                '\n', ...
                '   (1) Direct formulation \n \n', ...
                '   (2) First mixed formulation \n \n']);
      
      iopt2 = input ('Please choose a number from above or press <Enter> to return: ');

      if (~isempty (iopt2))
        switch iopt2
         case 1
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 3D eigenvalue problem\n', ...
                    '----------------------------------------------------\n', ...
                    '\n', ...
                    '   3D Maxwell eigenvalue problem solved with the direct formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_cube_eig \n',...
                    '   - test_maxwell_thickL_eig \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_cube_eig] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_cube_eig';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_maxwell_3d_eig.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_maxwell_3d_eig\n\n'], data_file)
          ex_bspline_maxwell_3d_eig
          input ('Press <Enter> to continue: ');

         case 2
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 3D eigenvalue problem\n', ...
                    '----------------------------------------------------\n', ...
                    '\n', ...
                    '   3D Maxwell eigenvalue problem solved with the first mixed formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_cube_eig \n',...
                    '   - test_maxwell_thickL_eig \n \n']);
          fprintf ('Please write the name of the data file: \n'); 
          data_file = input ('[test_maxwell_cube_eig] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_cube_eig';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_mixed_form1_3d_eig.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_mixed_form1_3d_eig\n\n'], data_file)
          ex_bspline_mixed_form1_3d_eig
          input ('Press <Enter> to continue: ');
        end %# switch (iopt2)
      end %# if (~isempty (iopt2))
    end %# while (iopt2 > 0)

  elseif (iopt == 1)
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 2D source problem\n', ...
                    '------------------------------------------------\n', ...
                    '\n', ...
                    '   2D Maxwell source problem solved with the direct formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_square \n',...
                    '   - test_maxwell_Lshaped \n',...
                    '   - test_maxwell_ring \n',...
                    '   - test_maxwell_pacman \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_square] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_square';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_maxwell_2d.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_maxwell_2d\n\n'], data_file)
          ex_bspline_maxwell_2d
          input ('Press <Enter> to continue: ');

  elseif (iopt == 3)
          clc;
          fprintf (1, ...
                   ['GeoPDEs_Maxwell examples menu: 3D source problem\n', ...
                    '------------------------------------------------\n', ...
                    '\n', ...
                    '   3D Maxwell source problem solved with the direct formulation. \n \n', ...
                    '   You can solve with one of the following data files: \n \n', ...
                    '   - test_maxwell_cube \n',...
                    '   - test_maxwell_camembert \n',...
                    '   - test_maxwell_thick_ring \n \n']);
          fprintf ('Please write the name of the data file: \n');
          data_file = input ('[test_maxwell_cube] ', 's');
          if (isempty (data_file))
            data_file = 'test_maxwell_cube';
          end
          eval(data_file);
          fprintf (['\nRunning script ' '     ex_bspline_maxwell_3d.m', ...
                    '\nwith the data file  %s \n', ...
                    '\nYou can have a look at the source using the command:\n' ...
                    '   type ex_bspline_maxwell_3d\n\n'], data_file)
          ex_bspline_maxwell_3d
          input ('Press <Enter> to continue: ');
  end

end %# while (iopt > 0)
end

